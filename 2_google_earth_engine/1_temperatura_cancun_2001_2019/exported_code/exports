/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var cancun_geometry = 
    /* color: #0b4a8b */
    /* shown: false */
    ee.Geometry.Polygon(
        [[[-86.9888928724973, 21.238330006870573],
          [-86.9888928724973, 20.984669019255062],
          [-86.68539555804418, 20.984669019255062],
          [-86.68539555804418, 21.238330006870573]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var landsat = require('users/fernandogp/clases_sig:procesa_imagenes');

// Función auxiliar para cortar las imágenes al área de Cancún.
exports.clip = function(image) {
  return image.clip(cancun_geometry);
};

// Función auxiliar para agregar una collección de imágenes al mapa a partir de un diccionario.
exports.addLayer_dict_ImageCollection = function(dict_collection, year, visParams, name) {
  return Map.addLayer(ee.ImageCollection(dict_collection.get(year)), visParams, name + ' (' + year + ')', false);
};

// Función auxiliar para agregar una capa de imagen al mapa a partir de un diccionario.
exports.addLayer_dict_Image = function(dict_image, year, visParams, name) {
  return Map.addLayer(ee.Image(dict_image.get(year)), visParams, name + ' (' + year + ')', false);
};

// Función auxiliar para crear una serie de tiempo a partir de un diccionario con coleciones de imágenes.
exports.dict_chart_series = function(dict_collection, place) {
  var list_image = dict_collection.values(dict_collection.keys());
  var collection_image = ee.ImageCollection.fromImages(list_image);
  return ui.Chart.image.series(collection_image, cancun_geometry, ee.Reducer.mean(), 30, 'year').
          setOptions({
            title: 'Serie de tiempo (Temperatura promedio) - ' + place + ' (2001 a 2019)',
            fontSize: 20,
            vAxis: {
              title: 'Promedio de la banda'
            }
          })
}

// Función auxiliar para crear un histograma a partir de un diccionario con imágenes.
exports.dict_chart_histogram = function(dict_image, year, place, min, max) {
  return ui.Chart.image.histogram(dict_image.get(year), cancun_geometry, 30).
          setOptions({
            title: 'Histograma de frecuencias (Temperatura promedio) - ' + place + ' (' + year +')',
            fontSize: 20,
            hAxis: {
              viewWindow: {
               min: min,
               max: max
              }
            },
            vAxis: {
              title : 'Frecuencia'
            }
          })
}

// Función auxiliar para exportar una imagen a Google Drive.
exports.export_image = function(dict_images, year, description, folderName) {
  Export.image.toDrive({
    image: dict_images.get(year),
    description: description,
    scale: 30,
    region: cancun_geometry,
    fileNamePrefix: year,
    folder: folderName,
    fileFormat: 'GeoTIFF',
    formatOptions: {
      cloudOptimized: true
    }
  });
};

// Funciones auxiliares para enmascarar las imágenes al área de Cancún de acuerdo a los 3 grupos obtenidos.
var mask_veg = function(image) {
  return image.updateMask(clusters.eq(1));
};

exports.mask_dict_veg = function(key, val) {
  return ee.Image(ee.ImageCollection(val).map(mask_veg));
};

exports.mask_dict_veg_mean = function(key, val) {
  return ee.Image(ee.ImageCollection(val).map(mask_veg).mean()).set({year: key});
};

var mask_city = function(image) {
  return image.updateMask(clusters.eq(2));
};

exports.mask_dict_city = function(key, val) {
  return ee.Image(ee.ImageCollection(val).map(mask_city));
};

exports.mask_dict_city_mean = function(key, val) {
  return ee.Image(ee.ImageCollection(val).map(mask_city).mean()).set({year: key});
};

var mask_water = function(image) {
  return image.updateMask(clusters.eq(0));
};

exports.mask_dict_water = function(key, val) {
  return ee.Image(ee.ImageCollection(val).map(mask_water));
};

exports.mask_dict_water_mean = function(key, val) {
  return ee.Image(ee.ImageCollection(val).map(mask_water).mean()).set({year: key});
};

// Función auxiliar para obtener las temperaturas en tierra de Cancún por año.
exports.temp_land_collection = function(year) {
  return ee.ImageCollection('MODIS/006/MOD11A1')
                      .filter(ee.Filter.date(year + '-01-01', year + '-12-31'))
                      .select('LST_Day_1km')
                      .map(exports.clip);
};

// Función auxiliar para obtener las temperaturas en mar-laguna de Cancún por año.
exports.temp_water_collection = function(year) {
  return ee.ImageCollection('NOAA/CDR/SST_PATHFINDER/V53')
                      .filter(ee.Filter.date(year + '-01-01', year + '-12-31'))
                      .select('sea_surface_temperature')
                      .map(exports.clip);
};

/* El mapa de Cancún se usa para obtener 3 grupos: Ciudad, Vegetación y Mar-Laguna */
// Obtención del mapa de Cancún de LANDSAT 8.
var map_image = landsat.lee_landsat("2019-01-01", "2019-12-31", 18, 45)
                .clip(cancun_geometry);

// Conjunto de referencia
var training = map_image.sample({scale: 30, numPixels: 1000});

// Ejecutar el algoritmo de agrupamiento buscando 3 grupos.
var kmeans = ee.Clusterer.wekaKMeans(3).train(training);

// Aplicar el resultado para agrupar la imagen completa.
var clusters = map_image.cluster(kmeans);

// Objetos a exportar.
exports.clusters = clusters;
exports.map_image = map_image;